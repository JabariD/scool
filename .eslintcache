[{"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\index.js":"1","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\App.js":"2","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\reportWebVitals.js":"3","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\LandingPage\\LandingPage.js":"4","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\404Page\\FourZeroFour.js":"5","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firebase.js":"6","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\providers\\AuthProvider\\AuthProvider.js":"7","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\SignUpPage\\SignUp.js":"8","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\styles\\MaterialUIStyles.js":"9","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Home\\Home.js":"10","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\SearchBar\\SearchBar.js":"11","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Header\\Header.js":"12","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\NavigationBar\\NavigationBar.js":"13","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Question\\Question.js":"14","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Trending\\Trending.js":"15","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Notifications\\Notifications.js":"16","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Messaging\\Messaging.js":"17","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\auth\\Authenticate.js":"18","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firestore\\Firestore.js":"19","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\PostQuestionButton\\PostQuestionButton.js":"20","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\QuestionFullPage\\QuestionFullPage.js":"21","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Profile\\Profile.js":"22"},{"size":500,"mtime":1611876477865,"results":"23","hashOfConfig":"24"},{"size":1484,"mtime":1615175655368,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1611876477865,"results":"26","hashOfConfig":"24"},{"size":4928,"mtime":1614723766824,"results":"27","hashOfConfig":"24"},{"size":173,"mtime":1612406879281,"results":"28","hashOfConfig":"24"},{"size":556,"mtime":1612409840261,"results":"29","hashOfConfig":"24"},{"size":1203,"mtime":1613925190456,"results":"30","hashOfConfig":"24"},{"size":2528,"mtime":1615210266978,"results":"31","hashOfConfig":"24"},{"size":360,"mtime":1613056735440,"results":"32","hashOfConfig":"24"},{"size":4524,"mtime":1614828076641,"results":"33","hashOfConfig":"24"},{"size":1613,"mtime":1614828297837,"results":"34","hashOfConfig":"24"},{"size":2523,"mtime":1615174363609,"results":"35","hashOfConfig":"24"},{"size":1691,"mtime":1614259759348,"results":"36","hashOfConfig":"24"},{"size":8461,"mtime":1615326745062,"results":"37","hashOfConfig":"24"},{"size":2254,"mtime":1615326747669,"results":"38","hashOfConfig":"24"},{"size":378,"mtime":1613684380344,"results":"39","hashOfConfig":"24"},{"size":1593,"mtime":1615218924847,"results":"40","hashOfConfig":"24"},{"size":2099,"mtime":1614481415128,"results":"41","hashOfConfig":"24"},{"size":4048,"mtime":1615216042346,"results":"42","hashOfConfig":"24"},{"size":3743,"mtime":1614786985488,"results":"43","hashOfConfig":"24"},{"size":8357,"mtime":1615164635179,"results":"44","hashOfConfig":"24"},{"size":2948,"mtime":1615211325913,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1yzuez1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\index.js",[],["99","100"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\App.js",["101"],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// import Auth provider\nimport { AuthProvider } from './providers/AuthProvider/AuthProvider.js';\n\n// pages\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport FourZeroFour from './pages/404Page/FourZeroFour';\nimport SignUp from './pages/SignUpPage/SignUp';\nimport Home from './pages/Home/Home';\nimport Trending from './pages/Trending/Trending';\nimport Notifications from './pages/Notifications/Notifications';\nimport Messaging from './pages/Messaging/Messaging';\nimport QuestionFullPage from './components/QuestionFullPage/QuestionFullPage';\nimport Profile from './pages/Profile/Profile';\n\nfunction App() {\n  return (\n    <AuthProvider> \n      <Router>\n        <Switch>\n          <Route path=\"/\" component={LandingPage} exact/>\n          <Route path=\"/signup\" component={SignUp} exact/>\n          <Route path=\"/home\" component={Home} exact/>\n          <Route path=\"/trending\" component={Trending} exact/>\n          <Route path=\"/profile/:userID\" component={Profile} exact/>\n          <Route path=\"/:collectionID/:questionID\" component={QuestionFullPage} exact/>\n          <Route path=\"/notifications\" component={Notifications} exact/>\n          <Route path=\"/messaging\" component={Messaging} exact/>\n          <Route path=\"*\" component={FourZeroFour} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\reportWebVitals.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\LandingPage\\LandingPage.js",["102","103","104"],"import React, { useContext, useState, useCallback, useEffect } from 'react'\r\n\r\n// import Auth context\r\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider.js';\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// styling\r\nimport \"./LandingPage.css\";\r\nimport ScoolLogo from '../img/logo.png';\r\nimport GoogleLogo from './img/googleLogo.svg';\r\n\r\n// Material UI\r\nimport { buttonStyle } from '../styles/MaterialUIStyles.js'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button: buttonStyle,\r\n    googleSignIn: {\r\n        backgroundColor: \"white\",\r\n        fontSize: \"0.8em\",\r\n        width: \"18em\",\r\n        margin: \"0 auto\",\r\n        color: \"black\",\r\n        display: \"block\",\r\n        textTransform: \"none\",\r\n        backgroundImage: `url(${GoogleLogo})`,\r\n        backgroundPosition: \"2px 9px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n  });\r\n\r\nexport default function LandingPage() {\r\n    // Context\r\n    // const user = useContext(AuthContext);\r\n    const DB = new Firestore();\r\n    const Auth = new Authenticate();\r\n\r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    // State\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // History\r\n    const history = useHistory();\r\n    const handleOnClick = useCallback(() => history.push('/signup'), [history]);\r\n\r\n    useEffect( async() => {\r\n        // Confirm user is logged in\r\n        const result = await Auth.IsLoggedIn();\r\n        if (result) {\r\n            // User is signed in.\r\n            history.push('/home');\r\n        }\r\n      });\r\n\r\n    // Behavior\r\n    const emailPasswordSignIn = async(email, password) => {\r\n        try {\r\n            const errorMessage = await Auth.signInWithEmailPassword(email, password);\r\n            if (errorMessage !== \"\") {\r\n                throw errorMessage;\r\n            } else {\r\n                await DB.updateUser(Authenticate.user.uid, {lastLoggedIn: new Date()});\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setErrorMessage(\"\");\r\n                history.push(\"/home\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setErrorMessage(e);\r\n        }\r\n    }  \r\n\r\n    const googleSignIn = async() => {\r\n        try {\r\n            const errorMessage = await Auth.signInWithGoogle();\r\n            if (errorMessage !== \"\") {\r\n                throw errorMessage;\r\n            } else {\r\n                const uid = Authenticate.user.uid;\r\n                const email = Authenticate.user.email;\r\n\r\n                const user = await DB.getUser(uid);\r\n\r\n                if (user) await DB.updateUser(uid, {lastLoggedIn: new Date()});\r\n                else await DB.createUser(uid, email);\r\n\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setErrorMessage(\"\");\r\n                history.push(\"/home\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setErrorMessage(e);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header-landingPage\">\r\n                <section className=\"logo\">\r\n                    <img src={ScoolLogo} alt=\"Scool Logo\"/>\r\n                    <h1 id=\"company logo\">SCOOL</h1>\r\n                </section>\r\n\r\n                <section className=\"motto\">\r\n                    <h2>Connect.</h2>\r\n                    <h2>Collaborate.</h2>\r\n                    <h2>Succeed.</h2>\r\n                </section>\r\n            </header>\r\n\r\n            <section className=\"email-password\">\r\n                <div className=\"email\">\r\n                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"error\">{errorMessage}</section>\r\n\r\n            <Button variant=\"contained\" className={classes.button} onClick={() => emailPasswordSignIn(email, password)}>\r\n                Log in\r\n            </Button>\r\n            <section className=\"createAccount\">\r\n                <p className=\"create-account\" onClick={handleOnClick}>Sign up</p>\r\n            </section>\r\n\r\n            <section className=\"google-login\">\r\n                <Button variant=\"contained\" className={classes.googleSignIn} onClick={googleSignIn}>\r\n                    Sign up or Log in using Google\r\n                </Button>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\404Page\\FourZeroFour.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firebase.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\providers\\AuthProvider\\AuthProvider.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\SignUpPage\\SignUp.js",["105","106"],"import React, { useState, useContext } from 'react'\r\n\r\n// Firebase Authentication\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\n// import Auth context\r\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider.js';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// styling\r\nimport \"./SignUp.css\";\r\nimport ScoolLogo from '../img/logo.png';\r\n\r\n// materialUI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\nimport { buttonStyle } from '../styles/MaterialUIStyles.js'\r\n\r\nconst useStyles = makeStyles({\r\n    button: buttonStyle,\r\n  });\r\n\r\nexport default function SignUp() {\r\n    const Auth = new Authenticate();\r\n    const DB = new Firestore();\r\n\r\n    const history = useHistory();\r\n\r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    // State\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const emailPasswordSignUp = async() => {\r\n      const errorMessage = await Auth.signUpWithEmailPassword(email, password);\r\n       if (errorMessage !== \"\") {\r\n        setErrorMessage(\"Error: \" + errorMessage);\r\n       } else {\r\n           const currentUserID = Authenticate.user.uid;\r\n           const currentUserEmail = Authenticate.user.email;\r\n           await DB.createUser(currentUserID, currentUserEmail);\r\n           setEmail(\"\");\r\n           setPassword(\"\");\r\n           setErrorMessage(\"\");\r\n           history.push('/home');\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <img src={ScoolLogo} alt=\"Scool Logo\" className=\"sign-up-form-logo\"/>\r\n            <h1>Sign up now, free!</h1>\r\n\r\n            <section className=\"email-password\">\r\n                <div className=\"email\">\r\n                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\r\n                </div>\r\n                <Button variant=\"contained\" className={classes.button} onClick={emailPasswordSignUp}>\r\n                    Sign Up\r\n                </Button>\r\n                <section className=\"error\">{errorMessage}</section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\styles\\MaterialUIStyles.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Home\\Home.js",["107","108","109"],"import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider.js';\r\n\r\n// import firebase\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// components\r\nimport SearchBar from '../../components/SearchBar/SearchBar.js';\r\nimport Header from '../../components/Header/Header.js';\r\nimport NavigationBar from '../../components/NavigationBar/NavigationBar.js';\r\nimport Question from '../../components/Question/Question.js';\r\nimport PostQuestionButton from '../../components/PostQuestionButton/PostQuestionButton.js';\r\n\r\n// MaterialUI\r\nimport { Select, MenuItem, Button } from '@material-ui/core';\r\n\r\n// styles\r\nimport './Home.css';\r\n\r\nexport default function Home() {\r\n    const history = useHistory();\r\n    const Auth = new Authenticate();\r\n    const DB = new Firestore();\r\n\r\n    const user = useContext(AuthContext);\r\n\r\n    // State\r\n    const [subscribeToQuestionList, setSubscribeToQuestionsList] = useState(false);\r\n    const [questions, setQuestions] = useState([]);\r\n    const [questionCollectionID, setQuestionCollectionID] = useState(\"\");\r\n    const [collegeSelected, setCollegeSelected] = useState(\"\");\r\n\r\n    // confirm user is logged in\r\n    // get questions for user OR show questions list user can subscribe to\r\n\r\n    useEffect( async() => {\r\n        // Confirm user is logged in\r\n        const result = await Auth.IsLoggedIn();\r\n        if (!result) {\r\n            history.push(\"/\");\r\n            return;\r\n        }\r\n\r\n        // get collection ID\r\n        const userData = await DB.getUser(Authenticate.user.uid);\r\n        const questionsID = userData.questionID; // collectionID of questions user is subscribed to.\r\n        setQuestionCollectionID(questionsID);\r\n        \r\n\r\n        // if questionID is none allow user to choose subscribe list\r\n        if (questionsID === \"none\") {\r\n            setSubscribeToQuestionsList(true);\r\n\r\n        } else {\r\n            // then query questions\r\n            const questionsExist = await DB.queryQuestions(questionsID);\r\n            let questionArray = [];\r\n            questionsExist.forEach((doc) => {\r\n                questionArray.push({id: doc.id, data: doc.data()})\r\n            });\r\n            setQuestions(questionArray);\r\n        }\r\n\r\n      }, []);\r\n\r\n      // if user clicks submit, we set the user university for that user\r\n    const setUserUniversity = async() => {\r\n        if (collegeSelected === \"\") return;\r\n        else await DB.updateUser(Authenticate.user.uid, {questionID: collegeSelected});\r\n\r\n        // set it to false\r\n        setSubscribeToQuestionsList(false);\r\n        setCollegeSelected(\"\");\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            \r\n            <Header pageName=\"Home\" />\r\n\r\n            <SearchBar questions={questions} questionCollectionID={questionCollectionID}/>\r\n\r\n            <main className=\"questions\">\r\n                { (!subscribeToQuestionList) ? \r\n                    questions.map( (question, index) => {\r\n                        return <Question key={index} question={question} id={questionCollectionID}/> \r\n                    })\r\n                    : \r\n                    <div>\r\n                        {/* Will be made into an AutoComplete for better navigation of colleges */}\r\n                        <h3>Choose a university to see questions...</h3>\r\n                        <Select\r\n                            labelId=\"demo-simple-select-label\"\r\n                            id=\"demo-simple-select\"\r\n                            value={collegeSelected}\r\n                            onChange={(e) => setCollegeSelected(e.target.value)}\r\n                            >\r\n                            <MenuItem value={\"huBison1867\"}>Howard U</MenuItem>\r\n                        </Select>\r\n                        <Button onClick={setUserUniversity}>Submit</Button>\r\n                        <p>This can be changed later.</p>\r\n                    </div>\r\n                \r\n                }\r\n            </main>\r\n\r\n            {\r\n                (!subscribeToQuestionList) ?\r\n                <PostQuestionButton postTo=\"local\"/>\r\n                :\r\n                <></>\r\n            }\r\n\r\n            <footer className=\"footer-nav-bar\">\r\n                <NavigationBar currentRoute=\"home\" />\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Header\\Header.js",["110"],"import React, { useState } from 'react'\r\n\r\n// firebase\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\n\r\n// React Router\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\n// styles\r\nimport \"./Header.css\";\r\n\r\nimport ScoolLogo from '../../pages/img/logo.png';\r\n\r\n// Material UI\r\nimport { Drawer, List, ListItem, ListItemText, Divider } from '@material-ui/core';\r\n\r\nexport default function Header( props ) {\r\n    const Auth = new Authenticate();\r\n\r\n    const [drawerState, setDrawerState] = useState(false);\r\n\r\n    const toggleDrawer = (state) => (event) => {\r\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n            return;\r\n        }\r\n      \r\n        setDrawerState(state);\r\n    }\r\n\r\n    const history = useHistory();\r\n    const signUserOut = async() => {\r\n        await Auth.signOut();\r\n        history.push('/');\r\n    }\r\n\r\n\r\n    const drawerLinks = () => (\r\n        <div className=\"drawerLinks\" onClick={toggleDrawer(false)} onKeyDown={toggleDrawer(false)}>\r\n            <section>\r\n                <span className=\"profile-image\"><i className=\"fas fa-user-alt\"></i></span>\r\n            </section>\r\n            \r\n\r\n            <List>\r\n                <ListItem>\r\n                    <ListItemText onClick={() => history.push(`/profile/${Authenticate.user.uid}`)} primary={\"Profile\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary={\"Saved\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary={\"Bonuses\"} />\r\n                </ListItem>\r\n                <ListItem>\r\n                    <ListItemText primary={\"Settings\"} />\r\n                </ListItem>\r\n                <Divider/>\r\n                <ListItem onClick={signUserOut}>\r\n                    <ListItemText primary={\"Sign Out\"} />\r\n                </ListItem>\r\n            </List>\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"header-logo\">\r\n                <span className=\"hamburger-menu\" onClick={toggleDrawer(true)}>\r\n                        <i className=\"fas fa-bars\"></i>\r\n                </span>\r\n\r\n                <img src={ScoolLogo} alt=\"Scool logo\"  />\r\n            </div>\r\n            \r\n\r\n            <h2 className=\"header-pageName\">{props.pageName}</h2>\r\n\r\n            <Drawer open={drawerState} onClose={toggleDrawer(false)} >\r\n                {drawerLinks()}\r\n            </Drawer>\r\n            \r\n        </header>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\NavigationBar\\NavigationBar.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Question\\Question.js",["111","112"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Trending\\Trending.js",["113","114","115"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Notifications\\Notifications.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Messaging\\Messaging.js",["116","117"],"import React, { useState, useEffect } from 'react'\r\n\r\n// import firebase\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\nimport Header from '../../components/Header/Header.js';\r\nimport NavigationBar from '../../components/NavigationBar/NavigationBar.js';\r\n\r\nexport default function Messaging(props) {\r\n    const { userToMessage } = props.location;\r\n\r\n    const Auth = new Authenticate();\r\n    const DB = new Firestore();\r\n\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect( async() => {\r\n        await Auth.IsLoggedIn();\r\n\r\n        // get user DM's from firestore\r\n        const user = await DB.getUser(Authenticate.user.uid);\r\n        setMessages(user.directMessages);\r\n        console.log(user)\r\n\r\n        if (userToMessage !== undefined) {\r\n            // if this user has data to DM someone\r\n            const DM = {};\r\n            setMessages(...messages, DM);\r\n\r\n        }\r\n\r\n        setMessages(user.directMessages);\r\n    }, []);\r\n\r\n\r\n    console.log(userToMessage);\r\n\r\n    return (\r\n        <div>\r\n            <Header pageName=\"Messaging\" />\r\n\r\n            \r\n            <div>\r\n                <span>Search bar.</span>\r\n                {/* search people and groups */}\r\n            </div>\r\n\r\n            <main>\r\n                {/* Display list of messages */}\r\n                {\r\n\r\n                }\r\n            </main>\r\n\r\n            <footer className=\"footer-nav-bar\">\r\n                <NavigationBar currentRoute=\"messaging\" />\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\auth\\Authenticate.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firestore\\Firestore.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\PostQuestionButton\\PostQuestionButton.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\QuestionFullPage\\QuestionFullPage.js",["118","119"],"import React, { useEffect, useState } from 'react'\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// css\r\nimport \"./QuestionFullPage.css\";\r\n\r\n// Material UI\r\nimport { Card, CardContent, TextField, Button } from '@material-ui/core'\r\n\r\n\r\nexport default function QuestionFullPage(props) {\r\n    const Auth = new Authenticate();\r\n    const DB = new Firestore();\r\n    const history = useHistory();\r\n\r\n    const [question, setQuestion] = useState(null);\r\n    const [displayCommentBox, setDisplayCommentBox] = useState(false);\r\n    const [comment, setComment] = useState(\"\");\r\n\r\n    useEffect( async() => {\r\n        // double check logged in\r\n        const result = await Auth.IsLoggedIn();\r\n        if (!result) {\r\n            history.push(\"/\");\r\n            return;\r\n        }\r\n        // get question correct collection is gotten from URL\r\n\r\n        // get question from DB in that collection\r\n        const question = await DB.querySpecificQuestion(props.match.params.collectionID, props.match.params.questionID);\r\n        setQuestion(question);\r\n\r\n    }, []);\r\n\r\n    const handleUpVotes = async() => {\r\n        const userHasTakenNoAction = !question.upVotes.includes(Authenticate.user.uid) && !question.downVotes.includes(Authenticate.user.uid);\r\n        const userHasUpVoted = question.upVotes.includes(Authenticate.user.uid);\r\n  \r\n        if (userHasTakenNoAction) {\r\n\r\n\r\n          let tempQuestionObject = { ...question };\r\n          tempQuestionObject.upVotes.push(Authenticate.user.uid);\r\n          setQuestion(tempQuestionObject);\r\n          console.log(\"Liked\");\r\n          await DB.updateSpecificQuestion({data: tempQuestionObject, id: props.match.params.questionID}, props.match.params.collectionID);\r\n          // change styling of liked \r\n        } else if (userHasUpVoted) {\r\n\r\n          // remove user uid from array\r\n          let tempQuestionObject = { ...question };\r\n          const index = tempQuestionObject.upVotes.indexOf(Authenticate.user.uid);\r\n          if (index > -1) {\r\n            tempQuestionObject.upVotes.splice(index, 1);\r\n          }\r\n  \r\n          setQuestion(tempQuestionObject);\r\n          console.log(\"Un liked\");\r\n          await DB.updateSpecificQuestion({data: tempQuestionObject, id: props.match.params.questionID}, props.match.params.collectionID);\r\n          // change styling of liked\r\n        }\r\n        \r\n      }\r\n  \r\n    const handleDownVotes = async() => {\r\n        const userHasTakenNoAction = !question.upVotes.includes(Authenticate.user.uid) && !question.downVotes.includes(Authenticate.user.uid);\r\n        const userHasDownVoted = question.downVotes.includes(Authenticate.user.uid);\r\n  \r\n        if ( userHasTakenNoAction ) {\r\n\r\n\r\n          let tempQuestionObject = { ...question };\r\n          tempQuestionObject.downVotes.push(Authenticate.user.uid);\r\n          setQuestion(tempQuestionObject);\r\n          console.log(\"Disliked\");\r\n          await DB.updateSpecificQuestion({data: tempQuestionObject, id: props.match.params.questionID}, props.match.params.collectionID);\r\n          // change styling\r\n        } else if (userHasDownVoted) {\r\n\r\n\r\n          // remove user uid from array\r\n          let tempQuestionObject = { ...question };\r\n          const index = tempQuestionObject.downVotes.indexOf(Authenticate.user.uid);\r\n          if (index > -1) {\r\n            tempQuestionObject.downVotes.splice(index, 1);\r\n          }\r\n  \r\n          setQuestion(tempQuestionObject);\r\n          console.log(\"Un disliked\");\r\n          await DB.updateSpecificQuestion({data: tempQuestionObject, id: props.match.params.questionID}, props.match.params.collectionID);\r\n          // change styling of liked\r\n        }\r\n      }\r\n\r\n    const handleSubmitComment = async() => {\r\n        if (comment === \"\") return null;\r\n        // helper text?\r\n        else {\r\n            let tempQuestion = { ...question };\r\n            const newComment = {createdByUserID: Authenticate.user.uid, body: comment, createdAt: new Date(), upVotes: 0, downVotes: 0, replies: []};\r\n            tempQuestion.comments.push(newComment);\r\n        \r\n            setQuestion(tempQuestion);\r\n            setComment(\"\");\r\n            setDisplayCommentBox(false);\r\n\r\n            await DB.updateSpecificQuestion({data: tempQuestion, id: props.match.params.questionID}, props.match.params.collectionID);\r\n        }\r\n      }\r\n    \r\n\r\n    return (\r\n        <div>\r\n            { (question) ?\r\n                <div>\r\n\r\n                <header className=\"question-full-page-header\">\r\n                    <span className=\"back\" onClick={() => history.goBack()}><i className=\"fas fa-arrow-left\"></i></span>\r\n                    <h3>Post</h3>\r\n                </header>\r\n\r\n                <div className=\"question-full-page-card\">\r\n                    <Card>\r\n                        <CardContent>\r\n                            <header>\r\n                                <span id=\"question-full-title\">{question.title}</span>\r\n                                <span id=\"question-full-user\">{\"User\"}</span>\r\n                                <span>{new Date(question.time_posted.toDate()).toLocaleString()}</span>\r\n                            </header>\r\n\r\n                            <main>\r\n                                {question.questionBody}\r\n                            </main>\r\n                            \r\n                            <section className=\"tags\">\r\n                                {question.tags.map((tag, index) => {\r\n                                return <span key={index} id=\"question-full-tag\">{tag}</span>\r\n                                })}\r\n                            </section>\r\n\r\n                            <section className=\"detailed\">\r\n                                {`${question.upVotes.length} Upvotes ${question.downVotes.length} Downvotes ${question.comments.length} Comments`}\r\n                            </section>\r\n\r\n                            <footer className=\"buttons\">\r\n                                <span id=\"question-full-fa-upvote\" onClick={handleUpVotes}><i className=\"far fa-thumbs-up\"></i></span>\r\n\r\n                                <span id=\"question-full-fa-downvote\" onClick={handleDownVotes}><i className=\"far fa-thumbs-down\"></i></span>\r\n\r\n                                <span><i className=\"far fa-comment\" onClick={() => setDisplayCommentBox(!displayCommentBox)}></i></span>\r\n                            </footer>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n                {\r\n                    (displayCommentBox) ? \r\n                    <Card>\r\n                        <CardContent>\r\n                            <span onClick={() => setDisplayCommentBox(false)}><i className=\"fas fa-times-circle\"></i></span>\r\n                            <TextField value={comment} onChange={(e) => setComment(e.target.value)}></TextField>\r\n                            <Button onClick={handleSubmitComment}>Post</Button>\r\n                        </CardContent>\r\n                    </Card>\r\n                    :\r\n                    <></>\r\n\r\n                }\r\n\r\n                {/* Loop through each comments */}\r\n                <div>\r\n                    {\r\n                        question.comments.map((com, index) => {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <Card>\r\n                                        <CardContent>\r\n                                            <header>\r\n\r\n                                            </header>\r\n                                            <main>\r\n                                                {com.body}\r\n                                            </main>\r\n\r\n                                            <section>\r\n                                                \r\n                                            </section>\r\n                                        </CardContent>\r\n                                    </Card>    \r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Profile\\Profile.js",["120","121"],"import React, { useEffect, useState } from 'react'\r\nimport Header from '../../components/Header/Header'\r\n\r\n// firebase\r\nimport Firestore from '../../firebase/firestore/Firestore';\r\nimport Authenticate from '../../firebase/auth/Authenticate'\r\n\r\n// React Router\r\nimport { Link } from 'react-router-dom';\r\n\r\n// Material UI\r\nimport { Card, CardContent, TextField, Button } from '@material-ui/core'\r\n\r\nexport default function Profile( props ) {\r\n    const DB = new Firestore();\r\n\r\n    const [user, setUser] = useState({});\r\n    const [major, setMajor] = useState(\"\");\r\n\r\n    useEffect( async() => {\r\n        const user = await DB.getUser(props.match.params.userID);\r\n        setUser(user);\r\n        setMajor(user.major);\r\n        console.log(user)\r\n    }, []);\r\n\r\n    const handleSubmit = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header pageName=\"Profile\"/>\r\n\r\n            {\r\n                (props.match.params.userID === Authenticate.user.uid) \r\n                ?\r\n                <main>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <header>\r\n                                <span>{user.email}</span>\r\n                            </header>\r\n\r\n                            <main>\r\n                                <TextField label=\"Major\" value={major} onChange={(e) => setMajor(e.target.value)}></TextField>\r\n                                <TextField label=\"Graduation Date\" type=\"date\" InputLabelProps={{shrink: true}}></TextField>\r\n                            </main>\r\n\r\n                            <footer>\r\n                                <Button onClick={handleSubmit}>Save changes</Button>\r\n                            </footer>\r\n\r\n                            <section>\r\n                                {/* List of ALL user questions */}\r\n                            </section>\r\n                        </CardContent>\r\n                    </Card>\r\n                </main>\r\n                :\r\n                <div>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <header>\r\n                                <span>{user.email}</span>\r\n                            </header>\r\n\r\n                            <main>\r\n                                <span>{user.major}</span>\r\n                                <span>{user.graduating}</span>\r\n                            </main>\r\n\r\n                            <section>\r\n                                {/* Most famous posts of this user */}\r\n                            </section>\r\n\r\n                            <span><Link to={{pathname: \"/messaging\", userToMessage: props.match.params.userID,}} ><i class=\"fas fa-envelope\"></i></Link></span>\r\n                        </CardContent>\r\n                    </Card>\r\n                    \r\n                </div>\r\n            }\r\n\r\n            <footer>\r\n                {/* return button */}\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":8,"nodeType":"128","messageId":"129","endLine":1,"endColumn":12},{"ruleId":"126","severity":1,"message":"130","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"131","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":56,"column":16,"nodeType":"134","endLine":63,"endColumn":8},{"ruleId":"126","severity":1,"message":"130","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"131","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":21},{"ruleId":"126","severity":1,"message":"135","line":30,"column":11,"nodeType":"128","messageId":"129","endLine":30,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":41,"column":16,"nodeType":"134","endLine":69,"endColumn":8},{"ruleId":"132","severity":1,"message":"136","line":69,"column":10,"nodeType":"137","endLine":69,"endColumn":12,"suggestions":"138"},{"ruleId":"126","severity":1,"message":"139","line":7,"column":22,"nodeType":"128","messageId":"129","endLine":7,"endColumn":26},{"ruleId":"132","severity":1,"message":"133","line":25,"column":15,"nodeType":"134","endLine":29,"endColumn":6},{"ruleId":"132","severity":1,"message":"140","line":29,"column":8,"nodeType":"137","endLine":29,"endColumn":10,"suggestions":"141"},{"ruleId":"126","severity":1,"message":"135","line":27,"column":11,"nodeType":"128","messageId":"129","endLine":27,"endColumn":15},{"ruleId":"132","severity":1,"message":"133","line":31,"column":16,"nodeType":"134","endLine":48,"endColumn":6},{"ruleId":"132","severity":1,"message":"136","line":48,"column":8,"nodeType":"137","endLine":48,"endColumn":10,"suggestions":"142"},{"ruleId":"132","severity":1,"message":"133","line":18,"column":16,"nodeType":"134","endLine":34,"endColumn":6},{"ruleId":"132","severity":1,"message":"143","line":34,"column":8,"nodeType":"137","endLine":34,"endColumn":10,"suggestions":"144"},{"ruleId":"132","severity":1,"message":"133","line":24,"column":16,"nodeType":"134","endLine":37,"endColumn":6},{"ruleId":"132","severity":1,"message":"145","line":37,"column":8,"nodeType":"137","endLine":37,"endColumn":10,"suggestions":"146"},{"ruleId":"132","severity":1,"message":"133","line":20,"column":16,"nodeType":"134","endLine":25,"endColumn":6},{"ruleId":"132","severity":1,"message":"147","line":25,"column":8,"nodeType":"137","endLine":25,"endColumn":10,"suggestions":"148"},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'AuthContext' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth', 'DB', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["151"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'CheckUpVoteDownVoteState', 'getUserWhoCreatedQuestion', and 'props.question'. Either include them or remove the dependency array. If 'setQuestionObject' needs the current value of 'props.question', you can also switch to useReducer instead of useState and read 'props.question' in the reducer.",["152"],["153"],"React Hook useEffect has missing dependencies: 'Auth', 'DB', 'messages', and 'userToMessage'. Either include them or remove the dependency array. You can also do a functional update 'setMessages(m => ...)' if you only need 'messages' in the 'setMessages' call.",["154"],"React Hook useEffect has missing dependencies: 'Auth', 'DB', 'history', 'props.match.params.collectionID', and 'props.match.params.questionID'. Either include them or remove the dependency array.",["155"],"React Hook useEffect has missing dependencies: 'DB' and 'props.match.params.userID'. Either include them or remove the dependency array.",["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"157","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [Auth, DB, history]",{"range":"168","text":"169"},"Update the dependencies array to be: [CheckUpVoteDownVoteState, getUserWhoCreatedQuestion, props.question]",{"range":"170","text":"171"},{"range":"172","text":"169"},"Update the dependencies array to be: [Auth, DB, messages, userToMessage]",{"range":"173","text":"174"},"Update the dependencies array to be: [Auth, DB, history, props.match.params.collectionID, props.match.params.questionID]",{"range":"175","text":"176"},"Update the dependencies array to be: [DB, props.match.params.userID]",{"range":"177","text":"178"},[2430,2432],"[Auth, DB, history]",[846,848],"[CheckUpVoteDownVoteState, getUserWhoCreatedQuestion, props.question]",[1576,1578],[1034,1036],"[Auth, DB, messages, userToMessage]",[1201,1203],"[Auth, DB, history, props.match.params.collectionID, props.match.params.questionID]",[751,753],"[DB, props.match.params.userID]"]