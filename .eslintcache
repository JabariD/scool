[{"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\index.js":"1","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\App.js":"2","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\reportWebVitals.js":"3","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\LandingPage\\LandingPage.js":"4","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\404Page\\FourZeroFour.js":"5","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firebase.js":"6","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\providers\\AuthProvider\\AuthProvider.js":"7","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\SignUpPage\\SignUp.js":"8","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\styles\\MaterialUIStyles.js":"9","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Home\\Home.js":"10","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\SearchBar\\SearchBar.js":"11","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Header\\Header.js":"12","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\NavigationBar\\NavigationBar.js":"13","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Question\\Question.js":"14","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Trending\\Trending.js":"15","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Notifications\\Notifications.js":"16","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Messaging\\Messaging.js":"17","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\auth\\Authenticate.js":"18","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firestore\\Firestore.js":"19","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\PostQuestionButton\\PostQuestionButton.js":"20","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\QuestionFullPage\\QuestionFullPage.js":"21"},{"size":500,"mtime":1611876477865,"results":"22","hashOfConfig":"23"},{"size":1368,"mtime":1614728422694,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1611876477865,"results":"25","hashOfConfig":"23"},{"size":4928,"mtime":1614723766824,"results":"26","hashOfConfig":"23"},{"size":173,"mtime":1612406879281,"results":"27","hashOfConfig":"23"},{"size":556,"mtime":1612409840261,"results":"28","hashOfConfig":"23"},{"size":1203,"mtime":1613925190456,"results":"29","hashOfConfig":"23"},{"size":2488,"mtime":1613927349304,"results":"30","hashOfConfig":"23"},{"size":360,"mtime":1613056735440,"results":"31","hashOfConfig":"23"},{"size":4524,"mtime":1614828076641,"results":"32","hashOfConfig":"23"},{"size":1613,"mtime":1614828297837,"results":"33","hashOfConfig":"23"},{"size":2449,"mtime":1613926659991,"results":"34","hashOfConfig":"23"},{"size":1691,"mtime":1614259759348,"results":"35","hashOfConfig":"23"},{"size":5181,"mtime":1614831603305,"results":"36","hashOfConfig":"23"},{"size":2258,"mtime":1614828323782,"results":"37","hashOfConfig":"23"},{"size":378,"mtime":1613684380344,"results":"38","hashOfConfig":"23"},{"size":364,"mtime":1613684388577,"results":"39","hashOfConfig":"23"},{"size":2099,"mtime":1614481415128,"results":"40","hashOfConfig":"23"},{"size":3588,"mtime":1614786202283,"results":"41","hashOfConfig":"23"},{"size":3743,"mtime":1614786985488,"results":"42","hashOfConfig":"23"},{"size":3242,"mtime":1614787959219,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yzuez1",{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\index.js",[],["91","92"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\App.js",["93"],"import logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// import Auth provider\nimport { AuthProvider } from './providers/AuthProvider/AuthProvider.js';\n\n// pages\nimport LandingPage from './pages/LandingPage/LandingPage';\nimport FourZeroFour from './pages/404Page/FourZeroFour';\nimport SignUp from './pages/SignUpPage/SignUp';\nimport Home from './pages/Home/Home';\nimport Trending from './pages/Trending/Trending';\nimport Notifications from './pages/Notifications/Notifications';\nimport Messaging from './pages/Messaging/Messaging';\nimport QuestionFullPage from './components/QuestionFullPage/QuestionFullPage';\n\nfunction App() {\n  return (\n    <AuthProvider> \n      <Router>\n        <Switch>\n          <Route path=\"/\" component={LandingPage} exact/>\n          <Route path=\"/signup\" component={SignUp} exact/>\n          <Route path=\"/home\" component={Home} exact/>\n          <Route path=\"/trending\" component={Trending} exact/>\n          <Route path=\"/:collectionID/:questionID\" component={QuestionFullPage} exact/>\n          <Route path=\"/notifications\" component={Notifications} exact/>\n          <Route path=\"/messaging\" component={Messaging} exact/>\n          <Route path=\"*\" component={FourZeroFour} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\reportWebVitals.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\LandingPage\\LandingPage.js",["94","95","96"],"import React, { useContext, useState, useCallback, useEffect } from 'react'\r\n\r\n// import Auth context\r\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider.js';\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// styling\r\nimport \"./LandingPage.css\";\r\nimport ScoolLogo from '../img/logo.png';\r\nimport GoogleLogo from './img/googleLogo.svg';\r\n\r\n// Material UI\r\nimport { buttonStyle } from '../styles/MaterialUIStyles.js'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    button: buttonStyle,\r\n    googleSignIn: {\r\n        backgroundColor: \"white\",\r\n        fontSize: \"0.8em\",\r\n        width: \"18em\",\r\n        margin: \"0 auto\",\r\n        color: \"black\",\r\n        display: \"block\",\r\n        textTransform: \"none\",\r\n        backgroundImage: `url(${GoogleLogo})`,\r\n        backgroundPosition: \"2px 9px\",\r\n        backgroundRepeat: \"no-repeat\",\r\n    }\r\n  });\r\n\r\nexport default function LandingPage() {\r\n    // Context\r\n    // const user = useContext(AuthContext);\r\n    const DB = new Firestore();\r\n    const Auth = new Authenticate();\r\n\r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    // State\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    // History\r\n    const history = useHistory();\r\n    const handleOnClick = useCallback(() => history.push('/signup'), [history]);\r\n\r\n    useEffect( async() => {\r\n        // Confirm user is logged in\r\n        const result = await Auth.IsLoggedIn();\r\n        if (result) {\r\n            // User is signed in.\r\n            history.push('/home');\r\n        }\r\n      });\r\n\r\n    // Behavior\r\n    const emailPasswordSignIn = async(email, password) => {\r\n        try {\r\n            const errorMessage = await Auth.signInWithEmailPassword(email, password);\r\n            if (errorMessage !== \"\") {\r\n                throw errorMessage;\r\n            } else {\r\n                await DB.updateUser(Authenticate.user.uid, {lastLoggedIn: new Date()});\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setErrorMessage(\"\");\r\n                history.push(\"/home\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setErrorMessage(e);\r\n        }\r\n    }  \r\n\r\n    const googleSignIn = async() => {\r\n        try {\r\n            const errorMessage = await Auth.signInWithGoogle();\r\n            if (errorMessage !== \"\") {\r\n                throw errorMessage;\r\n            } else {\r\n                const uid = Authenticate.user.uid;\r\n                const email = Authenticate.user.email;\r\n\r\n                const user = await DB.getUser(uid);\r\n\r\n                if (user) await DB.updateUser(uid, {lastLoggedIn: new Date()});\r\n                else await DB.createUser(uid, email);\r\n\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                setErrorMessage(\"\");\r\n                history.push(\"/home\");\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n            setErrorMessage(e);\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header-landingPage\">\r\n                <section className=\"logo\">\r\n                    <img src={ScoolLogo} alt=\"Scool Logo\"/>\r\n                    <h1 id=\"company logo\">SCOOL</h1>\r\n                </section>\r\n\r\n                <section className=\"motto\">\r\n                    <h2>Connect.</h2>\r\n                    <h2>Collaborate.</h2>\r\n                    <h2>Succeed.</h2>\r\n                </section>\r\n            </header>\r\n\r\n            <section className=\"email-password\">\r\n                <div className=\"email\">\r\n                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"error\">{errorMessage}</section>\r\n\r\n            <Button variant=\"contained\" className={classes.button} onClick={() => emailPasswordSignIn(email, password)}>\r\n                Log in\r\n            </Button>\r\n            <section className=\"createAccount\">\r\n                <p className=\"create-account\" onClick={handleOnClick}>Sign up</p>\r\n            </section>\r\n\r\n            <section className=\"google-login\">\r\n                <Button variant=\"contained\" className={classes.googleSignIn} onClick={googleSignIn}>\r\n                    Sign up or Log in using Google\r\n                </Button>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\404Page\\FourZeroFour.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firebase.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\providers\\AuthProvider\\AuthProvider.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\SignUpPage\\SignUp.js",["97","98"],"import React, { useState, useContext } from 'react'\r\n\r\n// Firebase Authentication\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore.js';\r\n\r\n// import Auth context\r\nimport { AuthContext } from '../../providers/AuthProvider/AuthProvider.js';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// styling\r\nimport \"./SignUp.css\";\r\nimport ScoolLogo from '../img/logo.png';\r\n\r\n// materialUI\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from '@material-ui/core';\r\nimport { buttonStyle } from '../styles/MaterialUIStyles.js'\r\n\r\nconst useStyles = makeStyles({\r\n    button: buttonStyle,\r\n  });\r\n\r\nexport default function SignUp() {\r\n    const DB = new Firestore();\r\n\r\n    const history = useHistory();\r\n\r\n    // MaterialUI\r\n    const classes = useStyles();\r\n\r\n    // State\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n\r\n    const emailPasswordSignUp = async() => {\r\n      const errorMessage = await DB.signUpWithEmailPassword(email, password);\r\n       if (errorMessage !== \"\") {\r\n        setErrorMessage(\"Error: \" + errorMessage);\r\n       } else {\r\n           const currentUserID = Authenticate.user.uid;\r\n           const currentUserEmail = Authenticate.user.email;\r\n           await DB.createUser(currentUserID, currentUserEmail);\r\n           setEmail(\"\");\r\n           setPassword(\"\");\r\n           setErrorMessage(\"\");\r\n           history.push('/home');\r\n       }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <img src={ScoolLogo} alt=\"Scool Logo\" className=\"sign-up-form-logo\"/>\r\n            <h1>Sign up now, free!</h1>\r\n\r\n            <section className=\"email-password\">\r\n                <div className=\"email\">\r\n                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\r\n                </div>\r\n                <div className=\"password\">\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required/>\r\n                </div>\r\n                <Button variant=\"contained\" className={classes.button} onClick={emailPasswordSignUp}>\r\n                    Sign Up\r\n                </Button>\r\n                <section className=\"error\">{errorMessage}</section>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\styles\\MaterialUIStyles.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Home\\Home.js",["99","100","101"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\SearchBar\\SearchBar.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Header\\Header.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\NavigationBar\\NavigationBar.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\Question\\Question.js",["102","103","104"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Trending\\Trending.js",["105","106","107"],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Notifications\\Notifications.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\pages\\Messaging\\Messaging.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\auth\\Authenticate.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\firebase\\firestore\\Firestore.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\PostQuestionButton\\PostQuestionButton.js",[],"C:\\Users\\denni\\Documents\\Code\\Projects\\scool\\src\\components\\QuestionFullPage\\QuestionFullPage.js",["108","109"],"import React, { useEffect, useState } from 'react'\r\nimport Authenticate from '../../firebase/auth/Authenticate.js';\r\nimport Firestore from '../../firebase/firestore/Firestore';\r\n\r\n// React Router\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// css\r\nimport \"./QuestionFullPage.css\";\r\n\r\n// Material UI\r\nimport { Card, CardContent } from '@material-ui/core'\r\n\r\n\r\nexport default function QuestionFullPage(props) {\r\n    const Auth = new Authenticate();\r\n    const DB = new Firestore();\r\n    const history = useHistory();\r\n\r\n    const [question, setQuestion] = useState(null);\r\n\r\n    useEffect( async() => {\r\n        // double check logged in\r\n        const result = await Auth.IsLoggedIn();\r\n        if (!result) {\r\n            history.push(\"/\");\r\n            return;\r\n        }\r\n        // get question correct collection is gotten from URL\r\n\r\n        // get question from DB in that collection\r\n        const question = await DB.querySpecificQuestion(props.match.params.collectionID, props.match.params.questionID);\r\n        setQuestion(question);\r\n\r\n    }, []);\r\n    \r\n\r\n    return (\r\n        <div>\r\n            { (question) ?\r\n                <div>\r\n                    {console.log(question)}\r\n\r\n                <header className=\"question-full-page-header\">\r\n                    <span className=\"back\" onClick={() => history.goBack()}><i className=\"fas fa-arrow-left\"></i></span>\r\n                    <h3>Post</h3>\r\n                </header>\r\n\r\n                <div className=\"question-full-page-card\">\r\n                    <Card>\r\n                        <CardContent>\r\n                            <header>\r\n                                <span id=\"question-full-title\">{question.title}</span>\r\n                                <span id=\"question-full-user\">{\"User\"}</span>\r\n                                <span>{new Date(question.time_posted.toDate()).toLocaleString()}</span>\r\n                            </header>\r\n\r\n                            <main>\r\n                                {question.questionBody}\r\n                            </main>\r\n                            \r\n                            <section className=\"tags\">\r\n                                {question.tags.map((tag, index) => {\r\n                                return <span key={index} id=\"question-full-tag\">{tag}</span>\r\n                                })}\r\n                            </section>\r\n\r\n                            <section className=\"detailed\">\r\n                                {`${question.upVotes.length} Upvotes ${question.downVotes.length} Downvotes ${question.comments.length} Comments`}\r\n                            </section>\r\n\r\n                            <footer className=\"buttons\">\r\n                                <span><i className=\"far fa-thumbs-up\"></i></span>\r\n\r\n                                <span><i className=\"far fa-thumbs-down\"></i></span>\r\n\r\n                                <span><i className=\"far fa-comment\"></i></span>\r\n                            </footer>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n                {/* Loop through each comments */}\r\n                </div>\r\n                :\r\n                <></>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":1,"column":8,"nodeType":"116","messageId":"117","endLine":1,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":27},{"ruleId":"114","severity":1,"message":"119","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":56,"column":16,"nodeType":"122","endLine":63,"endColumn":8},{"ruleId":"114","severity":1,"message":"118","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":37},{"ruleId":"114","severity":1,"message":"119","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"123","line":30,"column":11,"nodeType":"116","messageId":"117","endLine":30,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":41,"column":16,"nodeType":"122","endLine":69,"endColumn":8},{"ruleId":"120","severity":1,"message":"124","line":69,"column":10,"nodeType":"125","endLine":69,"endColumn":12,"suggestions":"126"},{"ruleId":"114","severity":1,"message":"127","line":18,"column":11,"nodeType":"116","messageId":"117","endLine":18,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":23,"column":15,"nodeType":"122","endLine":26,"endColumn":6},{"ruleId":"120","severity":1,"message":"128","line":26,"column":8,"nodeType":"125","endLine":26,"endColumn":10,"suggestions":"129"},{"ruleId":"114","severity":1,"message":"123","line":27,"column":11,"nodeType":"116","messageId":"117","endLine":27,"endColumn":15},{"ruleId":"120","severity":1,"message":"121","line":31,"column":16,"nodeType":"122","endLine":48,"endColumn":6},{"ruleId":"120","severity":1,"message":"124","line":48,"column":8,"nodeType":"125","endLine":48,"endColumn":10,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"121","line":22,"column":16,"nodeType":"122","endLine":35,"endColumn":6},{"ruleId":"120","severity":1,"message":"131","line":35,"column":8,"nodeType":"125","endLine":35,"endColumn":10,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'AuthContext' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'Auth', 'DB', and 'history'. Either include them or remove the dependency array.","ArrayExpression",["135"],"'Auth' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'findUserWithID' and 'props.question'. Either include them or remove the dependency array. If 'setQuestionObject' needs the current value of 'props.question', you can also switch to useReducer instead of useState and read 'props.question' in the reducer.",["136"],["137"],"React Hook useEffect has missing dependencies: 'Auth', 'DB', 'history', 'props.match.params.collectionID', and 'props.match.params.questionID'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"139","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [Auth, DB, history]",{"range":"146","text":"147"},"Update the dependencies array to be: [findUserWithID, props.question]",{"range":"148","text":"149"},{"range":"150","text":"147"},"Update the dependencies array to be: [Auth, DB, history, props.match.params.collectionID, props.match.params.questionID]",{"range":"151","text":"152"},[2430,2432],"[Auth, DB, history]",[709,711],"[findUserWithID, props.question]",[1576,1578],[1061,1063],"[Auth, DB, history, props.match.params.collectionID, props.match.params.questionID]"]